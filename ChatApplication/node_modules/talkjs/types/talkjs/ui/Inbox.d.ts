import { Conversation, ConversationBuilder } from "../model/Conversation";
import UIBox from "./UIBox";
import { JQuery, SendMessageEvent } from "./UIBox";
import { Promise } from "../minipolyfill";
import { InboxOptions } from "./UIOptions";
export interface ConversationSelectedEvent {
}
export interface DesktopNotificationToggledEvent {
}
export default class Inbox extends UIBox {
    select(conversation: string | Conversation | ConversationBuilder, options?: InboxOptions): void;
    mount(container: HTMLElement | JQuery | null): Promise<void>;
    on(eventType: "conversationSelected", handler: (event: ConversationSelectedEvent) => void): void;
    on(eventType: "desktopNotificationToggled", handler: (event: DesktopNotificationToggledEvent) => void): void;
    on(eventType: "sendMessage", handler: (event: SendMessageEvent) => void): void;
    off(eventType: "conversationSelected", handler: (event: ConversationSelectedEvent) => void): void;
    off(eventType: "desktopNotificationToggled", handler: (event: DesktopNotificationToggledEvent) => void): void;
    off(eventType: "sendMessage", handler: (event: SendMessageEvent) => void): void;
    destroy(): void;
}
