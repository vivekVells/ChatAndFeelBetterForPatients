import { Conversation, ConversationBuilder } from "../model/Conversation";
import UIBox from "./UIBox";
import { SendMessageEvent } from "./UIBox";
import { Promise } from "../minipolyfill";
import { PopupOptions } from "./UIOptions";
export interface OpenEvent {
}
export interface CloseEvent {
}
export default class Popup extends UIBox {
    mount({show}?: { show: boolean }): Promise<void>;
    select(conversation: string | Conversation | ConversationBuilder, options?: PopupOptions): void;
    destroy(): void;
    show(): void;
    hide(): void;
    on(eventType: "open", handler: (event: OpenEvent) => void): void;
    on(eventType: "close", handler: (event: CloseEvent) => void): void;
    on(eventType: "sendMessage", handler: (event: SendMessageEvent) => void): void;
    off(eventType: "open", handler: (event: OpenEvent) => void): void;
    off(eventType: "close", handler: (event: CloseEvent) => void): void;
    off(eventType: "sendMessage", handler: (event: SendMessageEvent) => void): void;
}
