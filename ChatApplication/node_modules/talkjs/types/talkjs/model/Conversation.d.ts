import User from "./User";
import { Participant, ParticipationSetting } from "./Participant";
import { ConversationData } from "../model/PublishedDomain";
export declare class Conversation implements ConversationData {
    private readonly _session;
    readonly id: string;
    readonly internalId: string;
    participants: Array<Participant>;
    readonly topicId?: string;
    subject?: string;
    custom?: {
    };
    photoUrl?: string;
}
export declare class ConversationBuilder {
    private _session;
    readonly id: string;
    readonly internalId: string;
    participants: Array<Participant>;
    subject?: string;
    custom?: {
    };
    photoUrl?: string;
    setParticipant(user: User, settings?: Partial<ParticipationSetting>): void;
    setAttributes({subject, photoUrl, custom}: Partial<ConversationAttributes>): void;
}
export declare function legacyOneOnOneId(me: User | string, other: User | string, topicId?: string): string;
export declare function oneOnOneId(me: User | string, other: User | string): string;
export declare type ConversationAttributes = {
    subject: string;
    photoUrl: string;
    custom: {
    };
};
export declare function computeInternalConversationId(externalConversationId: string): string;
